\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Different types of MR images}}{13}{figure.2.1}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {MR Cine}}}{13}{figure.2.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {MR Tagged}}}{13}{figure.2.1}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {MR Phase Contrast}}}{13}{figure.2.1}
\contentsline {figure}{\numberline {2.2}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip Two dimensional illustration of the construction of the wavelet attribute vectors in a multiresolution framework. (a) Input image: the rectangles refer to the sliding windows centered at the current voxel; the large neighborhood corresponds to the relatively low resolution, and the smaller neighborhood to the relatively higher resolution. (b) the image data inside the sliding windows; top: the down-sampled image inside the large window (low-resolution image); bottom: the image inside the small window (high-resolution image). (c) Wavelet decompositions of the images shown in (b); (d) Radial profiling is used to construct the attribute vectors at different resolutions, $\mathbf {v}_w^{(0)}$ and $\mathbf {v}_w^{(1)}$, and the wavelet attribute vector is $\mathbf {v}_w = [\lambda '_0\mathbf {v}_w^{(0)} , \lambda '_1\mathbf {v}_w^{(1)}] $ }}{18}{figure.2.2}
\contentsline {figure}{\numberline {2.3}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip Wavelet-based attribute vector similarity. The matchmaps, or the similarity in the neighborhood of select points are shown.}}{19}{figure.2.3}
\contentsline {figure}{\numberline {2.4}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip Wavelet-based attribute vectors for evaluating deformations within the same subject.}}{20}{figure.2.4}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Original Frame on which the points were selected, with the points shown in blue.}}}{20}{figure.2.4}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {The Target Frame, showing the original points in blue. The best correspondence is shown in yellow}}}{20}{figure.2.4}
\contentsline {figure}{\numberline {2.5}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip Attribute similarity across different Subjects}}{22}{figure.2.5}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {The template image on which the points are selected. Shown here in blue.}}}{22}{figure.2.5}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {The subject image, same frame, adjacent slice. The best correspondence is shown in yellow.}}}{22}{figure.2.5}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {The subject image, same frame, same slice. We show the selected points in the template space, overlaid in blue.}}}{22}{figure.2.5}
\contentsline {figure}{\numberline {2.6}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip Attribute similarity across different Subjects and different time frames}}{22}{figure.2.6}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {The subject image shown further along cardiac cycle, slice - 3. One of the points is detected on this slice}}}{22}{figure.2.6}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {The subject image shown further along cardiac cycle, slice - 2. One of the points is detected on this slice}}}{22}{figure.2.6}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {The subject image shown further along cardiac cycle, slice - 1. Two of the points are detected on this slice}}}{22}{figure.2.6}
\contentsline {subfigure}{\numberline {(d)}{\ignorespaces {The subject image shown further along cardiac cycle, the same slice. The points picked in the template space are shown in blue.}}}{22}{figure.2.6}
\contentsline {figure}{\numberline {2.7}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip Different kinds of matchmaps. Points A are points with high distinctiveness as their spread is small. Point B has low distinctiveness as it has a large spread. Points C also have relatively low distinctiveness, since the spread is large along one of the axes}}{23}{figure.2.7}
\contentsline {figure}{\numberline {2.8}{\ignorespaces Distinctiveness of a point over a sequence}}{24}{figure.2.8}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Distinct point that has low spatial spread and is static, i.e., has no motion}}}{24}{figure.2.8}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Distinct point, that has low spatial spread and has temporally smooth motion}}}{24}{figure.2.8}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {Non distinct point that has large spatial spread and haphazard temporal motion}}}{24}{figure.2.8}
\contentsline {figure}{\numberline {2.9}{\ignorespaces The distinctiveness of voxels, based on the wavelet attribute vectors}}{26}{figure.2.9}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Distinctiveness calculated over the whole image. We can see that it is low along the peripheries and also within the blood pool.}}}{26}{figure.2.9}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Overlay of the distinctiveness to show the distinctiveness on the myocardial region}}}{26}{figure.2.9}
\contentsline {figure}{\numberline {2.10}{\ignorespaces Formulation of the cardiac motion extraction problem.}}{28}{figure.2.10}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip Fiber orientations in the Human Heart showing the helical structure of the muscles (from \cite {gray18})}}{34}{figure.3.1}
\contentsline {figure}{\numberline {3.2}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip The material properties and boundary conditions for the cardiac model. We set the stress, $\sigma = 0$, at the boundary $\Gamma $. Different Lam\'{e} parameters are selected for the myocardium ($\lambda _1, \mu _1$), blood ($\lambda _2, \mu _2)$, the lungs ($\lambda _3, \mu _3)$ and for bone ($\lambda _4, \mu _4)$ }}{44}{figure.3.2}
\contentsline {figure}{\numberline {3.3}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip Heart fiber orientation in the human heart, obtained from diffusion tensor imaging}}{46}{figure.3.3}
\contentsline {figure}{\numberline {3.4}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip The angle between the mapped principal direction with the actual principal direction, in degrees. The image is overlaid on a segmentation of the heart based on the fractional anisotropy }}{52}{figure.3.4}
\contentsline {figure}{\numberline {3.5}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip The principal directions of the original DT are shown in blue. The mapped principal directions are shown in red. The glyphs are overlaid on a segmentation of the heart based on the fractional anisotropy of the mapped DT}}{52}{figure.3.5}
\contentsline {figure}{\numberline {3.6}{\ignorespaces \em \relax \fontsize {10.95}{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini \parsep 5\p@ plus2.5\p@ minus\p@ \topsep 10\p@ plus4\p@ minus6\p@ \itemsep 5\p@ plus2.5\p@ minus\p@ {\leftmargin \leftmargini \topsep 9\p@ plus3\p@ minus5\p@ \parsep 4.5\p@ plus2\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip The percentage of voxels having less than $10^\circ $ error in the principal directions after mapping }}{53}{figure.3.6}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces {\tt (a)} Tree representation of a quadtree and {\tt (b)} decomposition of a square domain using the quadtree, superimposed over an uniform grid, and {\tt (c)} a balanced linear quadtree: result of balancing the quadtree.}}{60}{figure.4.1}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {}}}{60}{figure.4.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {}}}{60}{figure.4.1}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {}}}{60}{figure.4.1}
\contentsline {figure}{\numberline {4.2}{\ignorespaces Computing the Morton id of quadrant `d' in the quadtree shown in Fig. \ref {fig:completeOctree}. The anchor for any quadrant is it's lower left corner.}}{61}{figure.4.2}
\contentsline {figure}{\numberline {4.3}{\ignorespaces {\tt (a)} Two cells: Input to {\tt Algorithm \ref {alg:compReg}}. {\tt (b)} The minimal number of octants between the cells given in {\tt (a)}. This is produced by using {\tt (a)} as input to {\tt Algorithm \ref {alg:compReg}}.}}{65}{figure.4.3}
\contentsline {figure}{\numberline {4.4}{\ignorespaces {\tt (a)} A partial set of quadrants: Input to {\tt Algorithm \ref {alg:n2o}}. {\tt (b)} A complete linear quadtree containing the cells in {\tt (a)}. This is produced by using {\tt (a)} as input to {\tt Algorithm \ref {alg:n2o}}.}}{67}{figure.4.4}
\contentsline {figure}{\numberline {4.5}{\ignorespaces {\tt (a)} A minimal list of quadrants covering the local domain on some processor, and {\tt (b)} A Morton ordering based partition of a quadtree across {\tt 4} processors, and {\tt (c)} Coarse quadrants and partition produced by using the quadtree shown in {\tt (b)} as input to {\tt Algorithm \ref {alg:blkPart}}.}}{69}{figure.4.5}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {}}}{69}{figure.4.5}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {}}}{69}{figure.4.5}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {}}}{69}{figure.4.5}
\contentsline {figure}{\numberline {4.6}{\ignorespaces The minimal list of balancing quadrants for the current quadrant is shown. This list of quadrants is generated in one iteration of {\tt Algorithm \ref {alg:conBal}}.}}{75}{figure.4.6}
\contentsline {figure}{\numberline {4.7}{\ignorespaces To find neighbors coarser than the current cell, we first select the finest cell at the far corner. The far corner is the one that is not shared with any of the current cell's siblings. The neighbors of this corner cell are determined and used as the search keys. The search returns the greatest cell lesser than or equal to the search key. The possible candidates in a complete linear quadtree, as shown, are ancestors of the search key.}}{80}{figure.4.7}
\contentsline {figure}{\numberline {4.8}{\ignorespaces {\tt (a)} A boundary octant cannot be finer than its internal neighbors, and {\tt (b)} an illustration of an insulation layer around octant N. No octant outside this layer of insulation can force a split on N.}}{84}{figure.4.8}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {}}}{84}{figure.4.8}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {}}}{84}{figure.4.8}
\contentsline {figure}{\numberline {4.9}{\ignorespaces A coarse quadtree illustrating inter and intra processor boundaries. First, every processor balances each of its local blocks. Then, each processor balances the cells on its intra-processor boundaries. The octants that lie on inter-processor boundaries are then communicated to the respective processors and each processor balances the combined list of local and remote octants.}}{85}{figure.4.9}
\contentsline {figure}{\numberline {4.10}{\ignorespaces Communication for inter-processor balancing is done in two stages: First, every octant on the inter-processor boundary is communicated to processors that overlap with its insulation layer. Next, all the local inter-processor boundary octants that lie in the insulation layer of a remote octant received from another processor are communicated to that processor.}}{86}{figure.4.10}
\contentsline {figure}{\numberline {4.11}{\ignorespaces Cells that lie on the inter-processor boundaries. The figure on the left shows an inter-processor boundary involving 2 processors and the figure on the right shows an inter-processor boundary involving 4 processors.}}{90}{figure.4.11}
\contentsline {figure}{\numberline {4.12}{\ignorespaces Comparison of three different approaches for balancing linear octrees {\tt (a)} for a Gaussian distribution of {\tt 1M} octants, {\tt (b)} for a Gaussian distribution of {\tt 4M} octants, {\tt (c)} for a Gaussian distribution of {\tt 8M} octants, and {\tt (d)} for a Gaussian distribution of {\tt 16M} octants.}}{94}{figure.4.12}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {}}}{94}{figure.4.12}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {}}}{94}{figure.4.12}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {}}}{94}{figure.4.12}
\contentsline {subfigure}{\numberline {(d)}{\ignorespaces {}}}{94}{figure.4.12}
\contentsline {figure}{\numberline {4.13}{\ignorespaces Isogranular scalability for Gaussian distribution of {\tt 1M} octants per processor. From left to right, the bars indicate the time taken for the different components of our algorithms for increasing processor counts. The bar for each processor is partitioned into {\tt 4} sections. From top to bottom, the sections represent the time taken for {\tt (1)} communication (including related pre-processing and post-processing) during balance refinement {\tt (Algorithm \ref {alg:parBal})}, {\tt (2)} balancing across intra and inter processor boundaries {\tt (Algorithm \ref {alg:ripple})}, {\tt (3)} balancing the blocks {\tt (Algorithm \ref {alg:effConBal})} and {\tt (4)} construction from points {\tt (Algorithm \ref {alg:p2o})}.}}{97}{figure.4.13}
\contentsline {figure}{\numberline {4.14}{\ignorespaces Isogranular scalability for Log-normal distribution of {\tt 1M} octants per processor. From left to right, the bars indicate the time taken for the different components of our algorithms for increasing processor counts. The bar for each processor is partitioned into {\tt 4} sections. From top to bottom, the sections represent the time taken for {\tt (1)} communication (including related pre-processing and post-processing) during balance refinement {\tt (Algorithm \ref {alg:parBal})}, {\tt (2)} balancing across intra and inter processor boundaries {\tt (Algorithm \ref {alg:ripple})}, {\tt (3)} balancing the blocks {\tt (Algorithm \ref {alg:effConBal})} and {\tt (4)} construction from points {\tt (Algorithm \ref {alg:p2o})}.}}{98}{figure.4.14}
\contentsline {figure}{\numberline {4.15}{\ignorespaces Isogranular scalability for uniformly spaced points with {\tt 1M} octants per processor. From left to right, the bars indicate the time taken for the different components of our algorithms for increasing processor counts. The bar for each processor is partitioned into {\tt 4} sections. From top to bottom, the sections represent the time taken for {\tt (1)} communication (including related pre-processing and post-processing) during balance refinement {\tt (Algorithm \ref {alg:parBal})}, {\tt (2)} balancing across intra and inter processor boundaries {\tt (Algorithm \ref {alg:ripple})}, {\tt (3)} balancing the blocks {\tt (Algorithm \ref {alg:effConBal})} and {\tt (4)} construction from points {\tt (Algorithm \ref {alg:p2o})}. While both the input and output grain sizes remain almost constant for the Gaussian and LogNormal distributions, only the output grain size remains constant for the Uniform distribution. Hence, the trend seen in this study is a little different from those for the Gaussian and LogNormal distributions.}}{99}{figure.4.15}
\contentsline {figure}{\numberline {4.16}{\ignorespaces Fixed size scalability for Gaussian distribution of {\tt 1M} octants. From left to right, the bars indicate the time taken for the different components of our algorithms for increasing processor counts. The bar for each processor is partitioned into {\tt 2} columns, which are further subdivided. The left column is subdivided into {\tt 2} sections and the right column is subdivided into {\tt 6} sections. The top and bottom sections of the left column represent the total time taken for {\tt (1)} balance refinement {\tt (Algorithm \ref {alg:parBal})} and {\tt (2)} construction {\tt (Algorithm \ref {alg:p2o})}, respectively. From top to bottom, the sections of the right column represent the time taken for {\tt (1)} balancing across intra and inter processor boundaries {\tt (Algorithm \ref {alg:ripple})}, {\tt (2)} balancing the blocks {\tt (Algorithm \ref {alg:effConBal})}, {\tt (3)} communication (including related pre-processing and post-processing) during balance refinement, {\tt (4)} local processing during construction, {\tt (5)} {\tt BlockPartition} and {\tt (6)} {\tt Sample Sort}.}}{100}{figure.4.16}
\contentsline {figure}{\numberline {4.17}{\ignorespaces Fixed size scalability for Gaussian distribution of {\tt 32M} octants. From left to right, the bars indicate the time taken for the different components of our algorithms for increasing processor counts. The bar for each processor is partitioned into {\tt 2} columns, which are further subdivided. The left column is subdivided into {\tt 2} sections and the right column is subdivided into {\tt 6} sections. The top and bottom sections of the left column represent the total time taken for {\tt (1)} balance refinement {\tt (Algorithm \ref {alg:parBal})} and {\tt (2)} construction {\tt (Algorithm \ref {alg:p2o})}, respectively. From top to bottom, the sections of the right column represent the time taken for {\tt (1)} balancing across intra and inter processor boundaries {\tt (Algorithm \ref {alg:ripple})}, {\tt (2)} balancing the blocks {\tt (Algorithm \ref {alg:effConBal})}, {\tt (3)} communication (including related pre-processing and post-processing) during balance refinement, {\tt (4)} local processing during construction, {\tt (5)} {\tt BlockPartition} and {\tt (6)} {\tt Sample Sort}.}}{101}{figure.4.17}
\contentsline {figure}{\numberline {4.18}{\ignorespaces Fixed size scalability for Gaussian distribution of {\tt 128M} octants. From left to right, the bars indicate the time taken for the different components of our algorithms for increasing processor counts. The bar for each processor is partitioned into {\tt 2} columns, which are further subdivided. The left column is subdivided into {\tt 2} sections and the right column is subdivided into {\tt 6} sections. The top and bottom sections of the left column represent the total time taken for {\tt (1)} balance refinement {\tt (Algorithm \ref {alg:parBal})} and {\tt (2)} construction {\tt (Algorithm \ref {alg:p2o})}, respectively. From top to bottom, the sections of the right column represent the time taken for {\tt (1)} balancing across intra and inter processor boundaries {\tt (Algorithm \ref {alg:ripple})}, {\tt (2)} balancing the blocks {\tt (Algorithm \ref {alg:effConBal})}, {\tt (3)} communication (including related pre-processing and post-processing) during balance refinement, {\tt (4)} local processing during construction, {\tt (5)} {\tt BlockPartition} and {\tt (6)} {\tt Sample Sort}.}}{102}{figure.4.18}
\contentsline {figure}{\numberline {4.19}{\ignorespaces Two types of z-ordering in quadtrees.}}{104}{figure.4.19}
\addvspace {10\p@ }
\addvspace {10\p@ }
